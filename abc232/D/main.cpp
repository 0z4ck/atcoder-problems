#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;



// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    // Failed to predict input format
    int H,W;
    cin >>H >>W;
    vector<string> grid(H); 
    for(int i=0;i<H;i++)
        cin >> grid[i];

    vector<vector<bool>> flag(H,vector<bool>(W,true));
    queue<vector<int>> q;
    q.push(vector<int>{0,0});

    vector<int> cr;
    while(!q.empty()){
        cr = q.front();
        q.pop();
        if (cr[0]!=H-1&&cr[1]!=W&&grid[cr[0]+1][cr[1]]=='.'&&flag[cr[0]+1][cr[1]]){
            q.push(vector<int>{cr[0]+1,cr[1]});
            flag[cr[0]+1][cr[1]]=false;
        }
        if(cr[0]!=H&&cr[1]!=W-1&&grid[cr[0]][cr[1]+1]=='.'&&flag[cr[0]][cr[1]+1]){
            q.push(vector<int>{cr[0],cr[1]+1});
            flag[cr[0]][cr[1]+1] =false;
        }
    }
    cout<<cr[0]+cr[1]+1<<endl;
    return 0;
}
