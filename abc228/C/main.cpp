#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;

const string YES = "Yes";
const string NO = "No";

void solve(long long N, long long K, std::vector<std::vector<long long>> P){
    vector<pair<int,int>> somme(N);
    for(int i=0;i<N;i++){
        somme[i].second = i;
        somme[i].first = P[i][0]+P[i][1]+P[i][2];
    }

    sort(somme.rbegin(),somme.rend());
    //sort(somme.end(),somme.begin());

    vector<bool> ansv(N);

    for(int i=0;i<N;i++){
        if (somme[i].first+300>=somme[K-1].first)
            ansv[somme[i].second]=1;
        else
            ansv[somme[i].second]=0;
    }

    for(int i=0;i<N;i++){
        if (ansv[i])
            cout<<YES<<endl;
        else
            cout<<NO<<endl;
    }



}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    long long K;
    std::scanf("%lld", &K);
    std::vector<std::vector<long long>> P(N, std::vector<long long>(3));
    for(int i = 0 ; i < N ; i++){
        for(int j = 0 ; j < 3 ; j++){
            std::scanf("%lld", &P[i][j]);
        }
    }
    solve(N, K, std::move(P));
    return 0;
}
