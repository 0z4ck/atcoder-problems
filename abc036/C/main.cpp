#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#define DBG(x) do { std::cerr << #x << ": " << x << std::endl; } while (0)
using namespace std;

template<typename T>
std::ostream& operator<<(std::ostream& s, const std::vector<T>& v)
{
    s.put('[');
    char comma[3] = {'\0', ' ', '\0'};
    for (const auto& e : v) {
        s << comma << e;
        comma[0] = ',';
    }
    return s << ']';
}
template<typename T>
std::ostream& operator<<(std::ostream& s, const std::vector<std::vector<T>>& v)
{
    for(const auto& e : v){
        s.put('[');
        char comma[3] = {'\0', ' ', '\0'};
        for (const auto& e2 : e) {
            s << comma << e2;
            comma[0] = ',';
        }
        s << ']'<<endl;
    }
    return s;
}
template<typename T>
std::ostream& operator<<(std::ostream& s, const std::map<T,T>& mp)
{
    s.put('{');
    char comma[3] = {'\0', ' ', '\0'};
    for (const auto& p : mp) {
        s << comma << p.first << ": "<<p.second;
        comma[0] = ',';
    }
    return s << '}';
}

void solve(long long N, std::vector<long long> a){
    int cnt = 0;
    map<int, int> mp;

    vector<pair<int, int>> vp(N);
    vector<vector<long long>> dv(N);

    for(int i=0;i<N;i++){
        vp[i]=make_pair(a[i],i);
        dv[i]={a[i],i};
        if(!mp[a[i]]++) 
            cnt++;
    }
    vector<int> ans(N);
    sort(dv.begin(),dv.end());
    sort(vp.begin(),vp.end());
    int i=0,j=0;
    int last = vp[0].first;
    for(auto &p: vp){
        if(i&&p.first==last)
            i--;
        ans[p.second]=i;
        last = p.first;
        i++;
    }
    for(int i=0;i<N;i++)
        cout<<ans[i]<<endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> a(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &a[i]);
    }
    solve(N, std::move(a));
    return 0;
}
