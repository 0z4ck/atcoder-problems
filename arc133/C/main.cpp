#include <bits/stdc++.h>
#define DBGln(x) do { std::cerr << #x << ": " << x << std::endl; } while (0)
#define DBG(x) do { std::cerr << #x << ": " << x ; } while (0)
using namespace std;
const int dx[4] = {1,0,-1,0}, dy[4] = {0,1,0,-1};

template<typename T>
std::ostream& operator<<(std::ostream& s, const std::vector<T>& v){
    s.put('[');
    char comma[3] = {'\0', ' ', '\0'};
    for (const auto& e : v) {
        s << comma << e;
        comma[0] = ',';
    }
    return s << ']';
}
template<typename T,typename T2>
std::ostream& operator<<(std::ostream& s, const std::pair<T,T2>& p){
    s.put('{');
    s<<p.first<<": "<<p.second;
    return s << '}';
}
template<typename T>
std::ostream& operator<<(std::ostream& s, const std::vector<std::vector<T>>& v){
    for(const auto& e : v){
        s.put('[');
        char comma[3] = {'\0', ' ', '\0'};
        for (const auto& e2 : e) {
            s << comma << e2;
            comma[0] = ',';
        }
        s << ']'<<endl;
    }
    return s;
}
template<typename T,typename T2>
std::ostream& operator<<(std::ostream& s, const std::map<T,T2>& mp){
    s.put('{');
    char comma[3] = {'\0', ' ', '\0'};
    for (const auto& p : mp) {
        s << comma << p.first << ": "<<p.second;
        comma[0] = ',';
    }
    return s << '}';
}
template<typename T>
std::ostream& operator<<(std::ostream& s, std::queue<T> q){
    s<<"queue(";
    char comma[3] = {'\0', ' ', '\0'};
    while (!q.empty()){
        s << comma <<q.front();
        q.pop();
        comma[0] = ',';
    }
    return s << ')';
}
const long long MOD = 3;

void solve(long long H, long long W, long long K, std::vector<long long> A, std::vector<long long> B){

    long long sa=0;
    long long sb=0;

    for(int i=0;i<H;i++)
        sa+=A[i];
    for(int i=0;i<W;i++)
        sb+=B[i];

    if(sa%K!=sb%K){
        cout<<-1<<endl;
        return;
    }
    long long m = (K-1)*H*W;
    for(int i=0;i<H;i++)
        sa+=A[i];
    for(int i=0;i<W;i++)
        m-=B[i]%(H*(K-1));
    cout<< K*(m/K)+(sb%K)<<endl;

}
// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long H;
    std::scanf("%lld", &H);
    long long W;
    std::scanf("%lld", &W);
    long long K;
    std::scanf("%lld", &K);
    std::vector<long long> A(H);
    for(int i = 0 ; i < H ; i++){
        std::scanf("%lld", &A[i]);
    }
    std::vector<long long> B(W);
    for(int i = 0 ; i < W ; i++){
        std::scanf("%lld", &B[i]);
    }
    solve(H, W, K, std::move(A), std::move(B));
    return 0;
}
