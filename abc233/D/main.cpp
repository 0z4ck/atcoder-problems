#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N, long long K, std::vector<long long> A){
    vector<long long>S(N+1);
    for(int i=0;i<N;i++)
        S[i+1]=S[i]+A[i];

    map<long long,long long>mp;
    long long ans=0;
    for(int i=0;i<N;i++){
        mp[S[i]]++;
        ans +=  mp[S[i+1]-K];
    }
    cout <<ans<<endl;

}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    long long K;
    std::scanf("%lld", &K);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    solve(N, K, std::move(A));
    return 0;
}
