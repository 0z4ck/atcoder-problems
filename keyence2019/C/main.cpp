#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N, std::vector<long long> A, std::vector<long long> B){
    vector<long long> C(N);
    long long s=0;
    for(long long i=0;i<N;i++){
        C[i]=A[i]-B[i];
        s+=C[i];
    }
    if(s<0){
        cout<<-1<<endl;
        return;
    }
    sort(C.begin(),C.end());
    long long cnt = 0;
    long long d=0;
    long long li=N-1;
    for(long long i=0;i<N&&C[i]<0;i++){
        d+=C[i];
        cnt++;
    }
    for(long long i=N-1;i>0&&d<0;i--){
        d+=C[i];
        cnt++;
    }
    cout<<cnt<<endl;

}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
    }
    std::vector<long long> B(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &B[i]);
    }
    solve(N, std::move(A), std::move(B));
    return 0;
}
