#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long N, long long M, std::vector<long long> A, std::vector<long long> B){
    vector<int> parent(N);
    vector<int> cardinal(N,1);
    vector<int> height(N,1);
    for(int i=0;i<N;i++)
        parent[i]=i;
    int root, root2;
    int maxc=1;
    for(int i=0;i<M;i++){
        root = A[i];
        while(parent[root] != root){
            root = parent[root];
        }
        root2 = B[i];
        while(parent[root2] != root2){
            root2 = parent[root2];
        }
        if(root!=root2){
            if(height[root]<height[root2]){
                parent[root]=root2;
                cardinal[root2]+=cardinal[root];
                if(maxc < cardinal[root2])
                    maxc=cardinal[root2];
            }else{
                parent[root2]=root;
                ++height[root];
                cardinal[root]+=cardinal[root2];
                if(maxc < cardinal[root])
                    maxc=cardinal[root];
            }
        }
    }
    cout<<maxc<<endl;

}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    std::scanf("%lld", &N);
    long long M;
    std::scanf("%lld", &M);
    std::vector<long long> A(M);
    std::vector<long long> B(M);
    for(int i = 0 ; i < M ; i++){
        std::scanf("%lld", &A[i]);
        std::scanf("%lld", &B[i]);
    }
    solve(N, M, std::move(A), std::move(B));
    return 0;
}
