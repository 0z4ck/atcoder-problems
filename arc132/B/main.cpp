#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long n, std::vector<long long> p){
    if (n==2){
        cout<<1<<endl;
        return;
    }
    bool rev;
    if (p[0]-p[1]==1)
        rev=true;
    else if (p[0]-p[1]==-1)
        rev=false;
    else {
        if (p[1]-p[2]==1)
            rev=true;
        else if (p[1]-p[2]==-1)
            rev=false;
    }
    int i,q;
    for(i=0;i<n-1;){
        q = rev ? 1:-1;
        if(p[i]-p[i+1]!=q)
            break;
        else
            i++;
    }
    if(n-1==i) i=-1;
    i++;
    if (rev) i=n-i;
    cout << (rev ? (i<(n-i) ? i+1 : (n-i+1)) : (i<(n-i+2) ? i:(n-i+2)) ) <<endl;

    
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long n;
    std::scanf("%lld", &n);
    std::vector<long long> p(n);
    for(int i = 0 ; i < n ; i++){
        std::scanf("%lld", &p[i]);
    }
    solve(n, std::move(p));
    return 0;
}
