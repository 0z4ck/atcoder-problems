#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
using namespace std;


void solve(long long n, std::vector<long long> R, std::vector<long long> C, long long q, std::vector<long long> r, std::vector<long long> c){
    for(int i=0;i<q;i++)
        if (R[r[i]-1]+C[c[i]-1]>n)
            cout<<"#";
        else
            cout<<".";
    cout<<endl;
}

// Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long n;
    std::scanf("%lld", &n);
    std::vector<long long> R(n);
    for(int i = 0 ; i < n ; i++){
        std::scanf("%lld", &R[i]);
    }
    std::vector<long long> C(n);
    for(int i = 0 ; i < n ; i++){
        std::scanf("%lld", &C[i]);
    }
    long long q;
    std::scanf("%lld", &q);
    std::vector<long long> r(q);
    std::vector<long long> c(q);
    for(int i = 0 ; i < q ; i++){
        std::scanf("%lld", &r[i]);
        std::scanf("%lld", &c[i]);
    }
    solve(n, std::move(R), std::move(C), q, std::move(r), std::move(c));
    return 0;
}
